<?php
/**
 * @file
 * The module that sends content created events to the message bus
 *
 */

use \Drupal\Core\Entity\EntityInterface;
use PhpAmqpLib\Connection\AMQPConnection;
use PhpAmqpLib\Message\AMQPMessage;

define("LISSA_NOTIFICATIONS_SERVER_MB", '10.181.138.165');

/**
 * Implements hook_entity_insert()
 */
function lissa_notifications_entity_insert(EntityInterface $e) {
  lissa_notifications_notify(EntityInterface $e, 'Entity inserted of type: ' . $e->getEntityTypeId());
}

/**
 * Implements hook_entity_update()
 */
function lissa_notifications_entity_update(EntityInterface $e) {
  lissa_notifications_notify(EntityInterface $e, 'Entity updated of type: ' . $e->getEntityTypeId());
}

/**
 * Implements hook_entity_delete()
 */
function lissa_notifications_entity_delete(EntityInterface $e) {
  lissa_notifications_notify(EntityInterface $e, 'Entity deleted of type: ' . $e->getEntityTypeId());
}

function lissa_notifications_notify(EntityInterface $e, $message = '') {
  if ($e->getEntityTypeId() == 'node') {
    $connection = new AMQPConnection(LISSA_NOTIFICATIONS_SERVER_MB, 5672, 'guest', 'guest');
    $channel = $connection->channel();

    $channel->queue_declare('content_notification', false, false, false, false);

    $channel->basic_publish(new AMQPMessage(var_export($e->toArray(), true)), '', 'content_notification');
    \Drupal::logger('LISSA Entity')->info($message);

    $channel->close();
    $connection->close();
  }
}
