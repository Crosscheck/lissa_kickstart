<?xml version="1.0" encoding="UTF-8"?>

<project name="LISSA Kickstart" default="build">
  <property file="build.default.properties" description="Default build configuration" override="true" />
  <property file="build.properties" description="Local build configuration overrides" override="true" />

  <property name="builddir" value="${phing.dir}/build"/>

  <target name="build" depends="clean,prepare,drush-make,install,import" description="Run drush make and drush site-install"/>
  <target name="rebuild" depends="uninstall,install,import" description="Perform a fast build"/>
  <target name="update" depends="update-code,update-drupal" description="Update the instance without destroying existing data."/>
  <target name="clean" depends="uninstall,clean-build,clean-docroot" description="Clean build artifacts and source code"/>

  <target name="clean-permissions" description="Clean permissions">
    <if>
      <available file="${docroot}/sites/${drupal.subdir}" type="dir" />
      <then>
        <exec command="chmod -R 0777 ${docroot}/sites/${drupal.subdir}" escape="false" />
      </then>
    </if>
    <if>
      <available file="${docroot}/sites/${drupal.subdir}/settings.php" type="file" />
      <then>
        <chmod file="${docroot}/sites/${drupal.subdir}/settings.php" mode="777"/>
      </then>
    </if>
  </target>

  <target name="clean-file-permissions" description="Clean file permissions">
    <if>
      <available file="${docroot}/sites/${drupal.subdir}/files" type="dir" />
      <then>
        <exec command="chmod -R 0777 ${docroot}/sites/${drupal.subdir}/files" escape="false" />
      </then>
    </if>
  </target>

  <target name="clean-build" description="Clean build artifacts">
    <if>
      <available file="${builddir}" type="dir" />
      <then>
        <delete dir="${builddir}"/>
      </then>
    </if>
  </target>

  <target name="clean-docroot" description="Clean docroot">
    <if>
      <available file="${docroot}" type="dir" />
      <then>
        <delete dir="${docroot}"/>
      </then>
    </if>
  </target>

  <target name="prepare">
    <mkdir dir="${builddir}" />
    <mkdir dir="${builddir}/logs" />
    <mkdir dir="${docroot}" />
  </target>

  <target name="drush-make-create" description="Run drush make for creating a new instance.">
    <exec executable="drush">
      <arg value="make"/>
      <arg value="--concurrency=5"/>
      <!-- Only prepare install if this is a new installation -->
      <arg value="--prepare-install"/>
      <arg value="${phing.dir}/${drush.makefile}"/>
      <arg value="${builddir}/${drupal.docroot}"/>
    </exec>
    <!-- Prepare the services.yml file -->
    <exec command="cp ${builddir}/${drupal.docroot}/sites/default/default.services.yml ${builddir}/${drupal.docroot}/sites/${drupal.subdir}/services.yml" escape="false" />
    <!-- Prepare the settings.php file -->
    <exec command="cp ${builddir}/${drupal.docroot}/profiles/lissa_kickstart/default.settings.php ${builddir}/${drupal.docroot}/sites/${drupal.subdir}/settings.php" escape="false" />
    <!-- Prepare the settings.local.php file -->
    <if>
      <available file="${drupal.local_settings}" type="file" />
      <then>
        <exec command="cp ${drupal.local_settings} ${builddir}/${drupal.docroot}/sites/${drupal.subdir}/settings.local.php" escape="false" />
      </then>
    </if>
  </target>

  <target name="drush-make-update" description="Run drush make for updating an existing instance.">
    <exec executable="drush">
      <arg value="make"/>
      <arg value="--concurrency=5"/>
      <arg value="${phing.dir}/${drush.makefile}"/>
      <arg value="${builddir}/${drupal.docroot}"/>
    </exec>
  </target>

  <target name="drush-make" description="Run drush make">
    <delete dir="${builddir}/${drupal.docroot}"/>
    <!-- Run drush make into ./build/drupal -->
    <if>
      <available file="${docroot}/core" type="dir" />
      <then>
        <phingcall target="drush-make-update" />
      </then>
      <else>
        <phingcall target="drush-make-create" />
      </else>
    </if>

    <!-- Rsync the build into ./docroot -->
    <exec executable="rsync">
      <arg value="-aqc"/>
      <arg value="--exclude=sites/*/files/*"/>
      <arg value="${builddir}/${drupal.docroot}/"/>
      <arg value="${docroot}"/>
    </exec>
  </target>

  <target name="install" depends="clean-permissions" description="Run drush site-install">
    <exec executable="drush" dir="${docroot}">
      <arg value="site-install"/>
      <arg value="-y"/>
      <arg value="--nocolor"/>
      <arg value="--db-url=${db.url}"/>
      <arg value="--site-name=${site.name}"/>
      <arg value="--site-mail=${site.mail}"/>
      <arg value="--account-name=${account.name}"/>
      <arg value="--account-pass=${account.pass}"/>
      <arg value="--account-mail=${account.mail}"/>
      <arg value="--sites-subdir=${drupal.subdir}"/>
      <arg value="--writable"/>
      <arg value="${drupal.profile}"/>
    </exec>
    <!-- Clean file permissions -->
    <phingcall target="clean-file-permissions" />
    <!-- Set up the composer dependencies -->
    <if>
      <available file="${docroot}/core/composer.json" type="file" />
      <then>
        <exec executable="php" dir="${docroot}/profiles/lissa_kickstart/modules/contrib/composer_manager/scripts">
          <arg value="init.sh"/>
        </exec>
        <exec executable="composer" dir="${docroot}/core">
          <arg value="drupal-update"/>
        </exec>
      </then>
    </if>
  </target>

  <target name="uninstall" description="Run drush sql-drop">
    <if>
      <available file="${docroot}" type="dir" />
      <then>
        <exec executable="drush" dir="${docroot}">
          <arg value="sql-drop"/>
          <arg value="-y"/>
          <arg value="--nocolor"/>
          <arg value="--db-url=${db.url}"/>
        </exec>
      </then>
    </if>
  </target>

  <target name="import" description="Import test data">
    <!-- Rsync the assets into the files dir. -->
    <exec executable="rsync">
      <arg value="-aqc"/>
      <arg value="${docroot}/profiles/lissa_kickstart/test_data/files/"/>
      <arg value="${docroot}/sites/default/files"/>
    </exec>
    <exec executable="drush" dir="${docroot}">
      <arg value="ime"/>
      <arg value="user"/>
      <arg value="profiles/lissa_kickstart/test_data/users.json"/>
    </exec>
    <exec executable="drush" dir="${docroot}">
      <arg value="ime"/>
      <arg value="file"/>
      <arg value="profiles/lissa_kickstart/test_data/files.json"/>
    </exec>
    <exec executable="drush" dir="${docroot}">
      <arg value="ime"/>
      <arg value="taxonomy_term"/>
      <arg value="profiles/lissa_kickstart/test_data/terms.json"/>
    </exec>
    <exec executable="drush" dir="${docroot}">
      <arg value="ime"/>
      <arg value="node"/>
      <arg value="profiles/lissa_kickstart/test_data/nodes.json"/>
    </exec>
    <exec executable="drush" dir="${docroot}">
      <arg value="ime"/>
      <arg value="shortcut"/>
      <arg value="profiles/lissa_kickstart/test_data/shortcuts.json"/>
    </exec>
  </target>

  <target name="config-export" description="Export configuration so it can be deployed during an update.">
    <exec executable="drush" dir="${docroot}">
      <arg value="config-export"/>
      <arg value="deploy"/>
      <arg value="-y"/>
    </exec>
  </target>

  <target name="update-code" description="Install or update the instance files.">
    <if>
      <not><available file="${docroot}/core" type="dir" /></not>
      <then>
        <phingcall target="build" />
      </then>
      <else>
        <phingcall target="drush-make" />
      </else>
    </if>
  </target>

  <target name="update-drupal" description="Update to the latest version without destroying content.">
    <!-- Rebuild all caches. -->
    <exec executable="drush" dir="${docroot}">
      <arg value="cache-rebuild"/>
    </exec>
    <!-- Run updates. -->
    <exec executable="drush" dir="${docroot}">
      <arg value="updb"/>
      <arg value="-y"/>
    </exec>
    <!-- Import the new configuration. -->
    <exec executable="drush" dir="${docroot}">
      <arg value="config-import"/>
      <arg value="deploy"/>
      <arg value="-y"/>
    </exec>
  </target>
</project>
